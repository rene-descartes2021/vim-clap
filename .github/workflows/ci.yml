name: ci

on: [push, pull_request]

jobs:
  cpoptions_checker:
    name: Check cpoptions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Ensure each vim source file declares cpoptions
      run: test/autoload_should_check_cpo.sh

  vint:
    name: Vint
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run vint with reviewdog
      uses: reviewdog/action-vint@v1.0.1
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: rustfmt
            override: true
      - uses: actions-rs/cargo@v1
        with:
          cmd: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly
            components: clippy
            override: true
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  crates:
    name: Rust
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run tests under crates
      run: bash ci/run_test.sh
    - name: Build maple
      run: cargo build --release

  python_dynamic_module:
    name: Python Dynamic Module
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run Cargo test
      run: |
        cd pythonx/clap/fuzzymatch-rs
        cargo test --no-default-features

  publish-macOS-M1-for-v0_30:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # This should work with only the `include`s but it currently doesn't because of this bug:
        # https://github.community/t5/How-to-use-Git-and-GitHub/GitHub-Actions-Matrix-options-dont-work-as-documented/td-p/29558
        os: [11-arm]
        include:
          - os: 11-arm
            artifact_name: maple
            asset_name: maple-aarch64-apple-darwin

    steps:
    - uses: hecrj/setup-rust-action@master
      with:
        rust-version: stable

    - uses: actions/checkout@v1

    - name: Build
      run: cargo build --release --locked

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        tag: v0.30
